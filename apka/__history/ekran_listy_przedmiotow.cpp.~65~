//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "ekran_listy_przedmiotow.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
TForma_listy_przedmiotow *Forma_listy_przedmiotow;
TADOConnection* ADOConnection6;

//---------------------------------------------------------------------------
__fastcall TForma_listy_przedmiotow::TForma_listy_przedmiotow(TComponent* Owner, TADOConnection* a_ADOConnection)
	: TForm(Owner)
{
	ADOConnection6 = a_ADOConnection;
    WczytajDane();
}

//---------------------------------------------------------------------------

void __fastcall TForma_listy_przedmiotow::WczytajDane()
{
	int count = 0;


//----------Inicjowanie SQL i select
	TADOQuery * Query = new TADOQuery(NULL);
	Query -> Connection = ADOConnection6;

	Query -> SQL -> Clear();
	Query -> SQL -> Add("SELECT trim(nazwa) as nazwa ,trim(opis) as opis,kwota,id,id_parent from dbo.dane");
	Query -> SQL -> Add("where id_parent=:id");

	Query -> Parameters -> ParamByName("id") -> Value = Forma_ekran_bazarek -> MojKlient -> Koszyk[count];

	Query -> Open();

	UnicodeString opis = Query -> FieldByName("opis") -> AsString;

	Grid -> BeginUpdate();

    //----------Usuwanie wszystkich przedmiotów z tabeli by wczytaæ je od nowa
	if (Grid->RowCount > 0)
		Grid->RowCount = 0;

//---------Wczytywanie wszystkich danych do tabeli grid
	while (!Query->Eof)
	{
		Grid->RowCount = count + 1;
		count = Grid->RowCount;

		Grid->Cells[grid_colNazwa->Index][count - 1]  =	Query -> FieldByName("nazwa") -> AsString;

		Grid->Cells[grid_colKwota->Index][count - 1]  =	Query -> FieldByName("kwota") -> AsFloat;

		Grid->Cells[grid_colEdycja->Index][count - 1] = "";

		Grid->Cells[grid_colId->Index][count - 1] 	  = Query -> FieldByName("id") -> AsString;

        Query -> Next();
	}
	Grid -> EndUpdate();
	delete Query;
}
//---------------------------------------------------------------------------
void __fastcall TForma_listy_przedmiotow::Image_paskiClick(TObject *Sender)
{
    ModalResult = 1;
}
//---------------------------------------------------------------------------
void __fastcall TForma_listy_przedmiotow::FormClose(TObject *Sender, TCloseAction &Action)

{
    Close();
}
//---------------------------------------------------------------------------
void __fastcall TForma_listy_przedmiotow::btn_przedmiotClick(TObject *Sender)
{
	dodaj(1, 0);
}
//---------------------------------------------------------------------------

void __fastcall TForma_listy_przedmiotow::dodaj(int a_tryb, int a_id)   // tryb = 1 dodawanie kup teraz, tryb = 2 dodawanie licytacji, tryb = 3 edycja
{
	TForma_edycji * forma_edycji = new TForma_edycji(this, ADOConnection6, a_tryb, a_id);
	forma_edycji -> ShowModal();
	delete forma_edycji;
    WczytajDane();
}

//---------------------------------------------------------------------------

void __fastcall TForma_listy_przedmiotow::btn_licytacjaClick(TObject *Sender)
{
	dodaj(2, 0);
}
//---------------------------------------------------------------------------

void __fastcall TForma_listy_przedmiotow::GridCellClick(TColumn * const Column, const int Row)

{
	if(Column -> Index == 2)
	{
		int id = StrToInt(Grid->Cells[grid_colId->Index][Row]);
		dodaj(3, id);
	}
}
//---------------------------------------------------------------------------

